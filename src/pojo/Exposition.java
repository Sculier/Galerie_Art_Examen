package pojo;

// Generated 13 avr. 2014 16:46:50 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Exposition generated by hbm2java
 */
@Entity
@Table(name = "exposition", catalog = "galerieart09")
public class Exposition implements java.io.Serializable {

	private Integer idExposition;
	private String nomExposition;
	private String themeExpo;
	private Date dateDebut;
	private Date dateFin;
	private Date dateVernissage;
	private String heureDebutVernissage;
	private Set<Participation> participations = new HashSet<Participation>(0);
	private Set<Situation> situations = new HashSet<Situation>(0);
	
	public Exposition() {
	}

	public Exposition(String nomExposition,
			String themeExpo, Date dateDebut, Date dateFin,
			Date dateVernissage, String heureDebutVernissage) {
		this.nomExposition = nomExposition;
		this.themeExpo = themeExpo;
		this.dateDebut = dateDebut;
		this.dateFin = dateFin;
		this.dateVernissage = dateVernissage;
		this.heureDebutVernissage = heureDebutVernissage;
	}

	public Exposition(Localexpo localexpo, String nomExposition,
			String themeExpo, Date dateDebut, Date dateFin,
			Date dateVernissage, String heureDebutVernissage,
			Newsletter newsletter,Set<Participation> participations,
			Set<Situation> situations) {
		this.nomExposition = nomExposition;
		this.themeExpo = themeExpo;
		this.dateDebut = dateDebut;
		this.dateFin = dateFin;
		this.dateVernissage = dateVernissage;
		this.heureDebutVernissage = heureDebutVernissage;
		this.participations = participations;
		this.situations = situations;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idExposition", unique = true, nullable = false)
	public Integer getIdExposition() {
		return this.idExposition;
	}

	public void setIdExposition(Integer idExposition) {
		this.idExposition = idExposition;
	}

	@Column(name = "nomExposition", nullable = false, length = 200)
	public String getNomExposition() {
		return this.nomExposition;
	}

	public void setNomExposition(String nomExposition) {
		this.nomExposition = nomExposition;
	}

	@Column(name = "themeExpo", nullable = false, length = 100)
	public String getThemeExpo() {
		return this.themeExpo;
	}

	public void setThemeExpo(String themeExpo) {
		this.themeExpo = themeExpo;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateDebut", nullable = false, length = 10)
	public Date getDateDebut() {
		return this.dateDebut;
	}

	public void setDateDebut(Date dateDebut) {
		this.dateDebut = dateDebut;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateFin", nullable = false, length = 10)
	public Date getDateFin() {
		return this.dateFin;
	}

	public void setDateFin(Date dateFin) {
		this.dateFin = dateFin;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateVernissage", nullable = false, length = 10)
	public Date getDateVernissage() {
		return this.dateVernissage;
	}

	public void setDateVernissage(Date dateVernissage) {
		this.dateVernissage = dateVernissage;
	}

	@Column(name = "heureDebutVernissage", nullable = false, length = 100)
	public String getHeureDebutVernissage() {
		return this.heureDebutVernissage;
	}

	public void setHeureDebutVernissage(String heureDebutVernissage) {
		this.heureDebutVernissage = heureDebutVernissage;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "exposition")
	public Set<Participation> getParticipations() {
		return this.participations;
	}

	public void setParticipations(Set<Participation> participations) {
		this.participations = participations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "exposition")
	public Set<Situation> getSituations() {
		return situations;
	}

	public void setSituations(Set<Situation> situations) {
		this.situations = situations;
	}

	@Override
	public String toString() {
		return "Exposition [idExposition=" + idExposition + ", nomExposition="
				+ nomExposition + ", themeExpo=" + themeExpo + ", dateDebut="
				+ dateDebut + ", dateFin=" + dateFin + ", dateVernissage="
				+ dateVernissage + ", heureDebutVernissage="
				+ heureDebutVernissage + "]";
	}

	
	

	
}

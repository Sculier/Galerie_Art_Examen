package pojo;

// Generated 13 avr. 2014 16:46:50 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Facture generated by hbm2java
 */
@Entity
@Table(name = "detailFacture", catalog = "galerieart09")
public class DetailFacture implements java.io.Serializable {

	private int idDetail;
	private Oeuvre oeuvre;
	private Facture facture;
	private Date dateDetail;
	private double montantTvaDetail;
	private double prixHtvaDetail;
	private double montantComissionDetail;
	

	
	public DetailFacture() {
	}

	
	public DetailFacture(Oeuvre oeuvre, Facture facture, double montantTvaDetail, 
			Date dateDetail, double prixHtvaDetail, double montantComissionDetail) {
		this.oeuvre = oeuvre;
		this.facture = facture;
		this.dateDetail = dateDetail;
		this.montantTvaDetail = montantTvaDetail;
		this.prixHtvaDetail = prixHtvaDetail;
		this.montantComissionDetail = montantComissionDetail;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "oeuvre"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "idDetail", unique = true, nullable = false)
	public int getIdDetail() {
		return idDetail;
	}

	public void setIdDetail(int idDetail) {
		this.idDetail = idDetail;
	}
	
	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Oeuvre getOeuvre() {
		return oeuvre;
	}

	public void setOeuvre(Oeuvre oeuvre) {
		this.oeuvre = oeuvre;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idFacture", nullable = false)
	public Facture getFacture() {
		return facture;
	}

	public void setFacture(Facture facture) {
		this.facture = facture;
	}

	
	@Column(name = "montantTvaDetail", nullable = false, precision = 22, scale = 0)
	public double getMontantTvaDetail() {
		return this.montantTvaDetail;
	}

	public void setMontantTvaDetail(double montantTvaDetail) {
		this.montantTvaDetail = montantTvaDetail;
	}

	@Column(name = "prixHTvaDetail", nullable = false, precision = 22, scale = 0)
	public double getPrixHtvaDetail() {
		return this.prixHtvaDetail;
	}

	public void setPrixHtvaDetail(double prixHtvaDetail) {
		this.prixHtvaDetail = prixHtvaDetail;
	}

	@Column(name = "montantComissionDetail", nullable = false, precision = 22, scale = 0)
	public double getMontantComissionDetail() {
		return this.montantComissionDetail;
	}

	public void setMontantComissionDetail(double montantComissionDetail) {
		this.montantComissionDetail = montantComissionDetail;
	}

	public double calculMontantTvaDetail(Oeuvre oeuvre){
		double tva = 0.0;
	    tva = (oeuvre.getPrixNegocie() * oeuvre.getTauxTva())/100;
		return tva;
	}

	public double calculPrixHtvaDetail(Oeuvre oeuvre){
		double prixHtva = 0.0;
		prixHtva = oeuvre.getPrixNegocie()-((oeuvre.getPrixNegocie() * oeuvre.getTauxTva())/100);
		return prixHtva;
	}
	
	public double calculMontantComissionDetail(double prixHtva, Oeuvre oeuvre){
		double Comission = 0.0;
		Comission = ((oeuvre.getPrixNegocie()-((oeuvre.getPrixNegocie() * oeuvre.getTauxTva())/100))* 
				(oeuvre.getPourcentageComission())/100);
		return Comission;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateDetail", nullable = false, length = 10)
	public Date getDateDetail() {
		return dateDetail;
	}


	public void setDateDetail(Date dateDetail) {
		this.dateDetail = dateDetail;
	}


	@Override
	public String toString() {
		return "DetailFacture [idDetail=" + idDetail + ", oeuvre=" + oeuvre
				+ ", facture=" + facture + ", dateDetail=" + dateDetail
				+ ", montantTvaDetail=" + montantTvaDetail
				+ ", prixHtvaDetail=" + prixHtvaDetail
				+ ", montantComissionDetail=" + montantComissionDetail + "]";
	}



	




	
	


	
	
	

}

package pojo;

// Generated 13 avr. 2014 16:46:50 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Facture generated by hbm2java
 */
@Entity
@Table(name = "facture", catalog = "galerieart09")
public class Facture implements java.io.Serializable {

	private Integer idFacture;
	private Client client;
	private String numeroFacture;
	private double montantTva;
	private double prixHtva;
	private double montantComission;
	private Date dateVente;
	private double montantTotal;
	private Set<DetailFacture> detailFactures = new HashSet<DetailFacture>(0);

	public Facture() {
	}

	
	public Facture(Client client, String numeroFacture,
			double montantTva, double prixHtva, double montantComission, 
			Date dateVente, double montantTotal) {
		this.client = client;
		this.numeroFacture = numeroFacture;
		this.montantTva = montantTva;
		this.prixHtva = prixHtva;
		this.montantComission = montantComission;
		this.dateVente = dateVente;
		this.montantTotal = montantTotal;
	}

	public Facture(Client client, String numeroFacture, float tauxTva, 
			double montantTva, double prixHtva, double montantComission, Date dateVente,
			double montantTotal, Set<DetailFacture> detailFactures) {
		this.client = client;
		this.numeroFacture = numeroFacture;
		this.montantTva = montantTva;
		this.prixHtva = prixHtva;
		this.montantComission = montantComission;
		this.dateVente = dateVente;
		this.montantTotal = montantTotal;
		this.detailFactures = detailFactures;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idFacture", unique = true, nullable = false)
	public Integer getIdFacture() {
		return this.idFacture;
	}

	public void setIdFacture(Integer idFacture) {
		this.idFacture = idFacture;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idClient", nullable = false)
	public Client getClient() {
		return this.client;
	}

	public void setClient(Client client) {
		this.client = client;
	}

	@Column(name = "numeroFacture", nullable = false, length = 100)
	public String getNumeroFacture() {
		return this.numeroFacture;
	}

	public void setNumeroFacture(String numeroFacture) {
		this.numeroFacture = numeroFacture;
	}

	@Column(name = "montantTva", nullable = false, precision = 22, scale = 0)
	public double getMontantTva() {
		return this.montantTva;
	}

	public void setMontantTva(double montantTva) {
		this.montantTva = montantTva;
	}

	@Column(name = "prixHTva", nullable = false, precision = 22, scale = 0)
	public double getPrixHtva() {
		return this.prixHtva;
	}

	public void setPrixHtva(double prixHtva) {
		this.prixHtva = prixHtva;
	}

	@Column(name = "montantComission", nullable = false, precision = 22, scale = 0)
	public double getMontantComission() {
		return this.montantComission;
	}

	public void setMontantComission(double montantComission) {
		this.montantComission = montantComission;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dateVente", nullable = false, length = 10)
	public Date getDateVente() {
		return this.dateVente;
	}

	public void setDateVente(Date dateVente) {
		this.dateVente = dateVente;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "facture")
	public Set<DetailFacture> getdetailFactures() {
		return this.detailFactures;
	}

	public void setdetailFactures(Set<DetailFacture> detailFactures) {
		this.detailFactures = detailFactures;
	}


	@Column(name = "montantTotal", nullable = false, precision = 22, scale = 0)
	public double getMontantTotal() {
		return montantTotal;
	}

	public void setMontantTotal(double montantTotal) {
		this.montantTotal = montantTotal;
	}


	public double calculMontantTotal(){
		double total = 0.0;
		
		return total;
	}
	
	public double calculMontantTva(Set<Oeuvre> listOeuvres){
		double tvaTotale = 0.0;
		for (Oeuvre tmp:listOeuvres){
			tvaTotale+=(tmp.getPrixNegocie() * tmp.getTauxTva())/100;
		}
		return tvaTotale;
	}
	
	public double calculPrixHtva(Set<Oeuvre> listOeuvres){
		double prixHtvaTotal = 0.0;
		for (Oeuvre tmp:listOeuvres){
			prixHtvaTotal+=tmp.getPrixNegocie()-((tmp.getPrixNegocie() * tmp.getTauxTva())/100);
		}
		return prixHtvaTotal;
	}
	
	public double calculMontantComission(Set<Oeuvre> listOeuvres){
		double comissionTotal = 0.0;
		for (Oeuvre tmp:listOeuvres){
			comissionTotal+=((tmp.getPrixNegocie()-((tmp.getPrixNegocie() * tmp.getTauxTva())/100))* 
					(tmp.getPourcentageComission())/100);;
		}
		return comissionTotal;
	}


	@Override
	public String toString() {
		return "Facture [idFacture=" + idFacture + ", client=" + client
				+ ", numeroFacture=" + numeroFacture + ", montantTva="
				+ montantTva + ", prixHtva=" + prixHtva + ", montantComission="
				+ montantComission + ", dateVente=" + dateVente
				+ ", montantTotal=" + montantTotal + "]";
	}


	



	
}
